-- ============================================================================
-- Seed de d√©veloppement pour les amortissements PilotImmo
-- ============================================================================
-- Ce script cr√©e un jeu de donn√©es minimal pour travailler en local :
--   - Un utilisateur de d√©monstration (public.users)
--   - Une propri√©t√© rattach√©e √† cet utilisateur (public.properties)
--   - Un amortissement valide li√© √† la propri√©t√© (public.amortizations)
--
-- Le script est enti√®rement idempotent et n'utilise aucune m√©ta-commande psql.
-- ============================================================================

SELECT 'üå± Seed d√©veloppement amortizations' AS info;

DO $$
DECLARE
  demo_uid constant text := 'demo-user-pilotimmo';
  demo_email constant text := 'demo@pilotimmo.dev';
  demo_user_id uuid;
  demo_property_id uuid;
  has_created_by boolean;
BEGIN
  -- V√©rifier la pr√©sence des tables n√©cessaires
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema = 'public' AND table_name = 'users'
  ) THEN
    RAISE NOTICE '‚ö†Ô∏è  Table public.users absente, seed annul√©';
    RETURN;
  END IF;

  IF NOT EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema = 'public' AND table_name = 'properties'
  ) THEN
    RAISE NOTICE '‚ö†Ô∏è  Table public.properties absente, seed annul√©';
    RETURN;
  END IF;

  -- R√©cup√©rer ou cr√©er l'utilisateur de d√©mo
  SELECT id INTO demo_user_id
  FROM public.users
  WHERE uid = demo_uid
  LIMIT 1;

  IF demo_user_id IS NULL THEN
    INSERT INTO public.users (uid, email, display_name, subscription)
    VALUES (demo_uid, demo_email, 'Utilisateur D√©mo', 'free')
    RETURNING id INTO demo_user_id;

    RAISE NOTICE '‚úÖ Utilisateur de d√©mo cr√©√© (uid=%)', demo_uid;
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è  Utilisateur de d√©mo d√©j√† pr√©sent (uid=%)', demo_uid;
  END IF;

  -- V√©rifier la pr√©sence de la colonne created_by sur properties
  SELECT EXISTS (
    SELECT 1 FROM information_schema.columns
    WHERE table_schema = 'public'
      AND table_name = 'properties'
      AND column_name = 'created_by'
  ) INTO has_created_by;

  -- R√©cup√©rer ou cr√©er une propri√©t√© de d√©mo
  SELECT id INTO demo_property_id
  FROM public.properties
  WHERE user_id = demo_uid
  ORDER BY created_at
  LIMIT 1;

  IF demo_property_id IS NULL THEN
    IF has_created_by THEN
      INSERT INTO public.properties (
        user_id, created_by, address, start_date, monthly_rent,
        status, description, type
      ) VALUES (
        demo_uid,
        demo_uid,
        '123 Rue du Smoke Test, 75000 Paris',
        CURRENT_DATE,
        950,
        'active',
        'Bien de d√©monstration cr√©√© par sql/seed_dev_amortization.sql',
        'apartment'
      )
      RETURNING id INTO demo_property_id;
    ELSE
      INSERT INTO public.properties (
        user_id, address, start_date, monthly_rent,
        status, description, type
      ) VALUES (
        demo_uid,
        '123 Rue du Smoke Test, 75000 Paris',
        CURRENT_DATE,
        950,
        'active',
        'Bien de d√©monstration cr√©√© par sql/seed_dev_amortization.sql',
        'apartment'
      )
      RETURNING id INTO demo_property_id;
    END IF;

    RAISE NOTICE '‚úÖ Propri√©t√© de d√©mo cr√©√©e (id=%)', demo_property_id;
  ELSE
    RAISE NOTICE '‚ÑπÔ∏è  Propri√©t√© de d√©mo d√©j√† pr√©sente (id=%)', demo_property_id;
  END IF;

  -- Cr√©er un amortissement de d√©mo si n√©cessaire
  IF EXISTS (
    SELECT 1 FROM information_schema.tables
    WHERE table_schema = 'public' AND table_name = 'amortizations'
  ) THEN
    IF NOT EXISTS (
      SELECT 1 FROM public.amortizations
      WHERE property_id = demo_property_id
    ) THEN
      INSERT INTO public.amortizations (
        user_id,
        property_id,
        item_name,
        category,
        purchase_date,
        purchase_amount,
        useful_life_years,
        status,
        notes
      ) VALUES (
        demo_uid,
        demo_property_id,
        'Mobilier de d√©monstration',
        'mobilier',
        CURRENT_DATE - INTERVAL '180 days',
        2400,
        10,
        'active',
        'Cr√©√© automatiquement par sql/seed_dev_amortization.sql'
      );

      RAISE NOTICE '‚úÖ Amortissement de d√©mo cr√©√© pour la propri√©t√© %', demo_property_id;
    ELSE
      RAISE NOTICE '‚ÑπÔ∏è  Amortissement de d√©mo d√©j√† pr√©sent pour la propri√©t√© %', demo_property_id;
    END IF;
  ELSE
    RAISE NOTICE '‚ö†Ô∏è  Table public.amortizations absente, √©tape ignor√©e';
  END IF;
END;
$$;

SELECT '‚úÖ Seed d√©veloppement termin√©' AS status;
